name: 'Client Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/Add-Client
    metadata:
      groupName: 'Client Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Add a New Client

        This endpoint allows you to add a new client with an image. If no URL is provided, it defaults to 'null'.
        **Note:** This endpoint requires an `Authorization: Bearer <access_token>` header.

        **Note:** You will get the access_token after Admin Login
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: 'The URL associated with the client.'
        required: false
        example: '"https://example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'An image file for the client, allowed types: jpeg, png, jpg, gif, svg, max size 5MB.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      url: '"https://example.com"'
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
            "success": 1,
            "message": "Client Added",
            "Client": {
              "id": 1,
              "url": "https://example.com",
              "image": "https://cloudinary.com/your-image-url.jpg",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "image": [
                "The image field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": 0,
            "message": "An error occurred while creating the client",
            "error": "Detailed error message here"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/Update/Client/{id}'
    metadata:
      groupName: 'Client Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Update Client 

        This endpoint allows you to update an existing client's details or image.
        **Note:** This endpoint requires an `Authorization: Bearer <access_token>` header.

        **Note:** You will get the access_token after Admin Login
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: 'optional The URL associated with the client.'
        required: false
        example: '"https://example.com"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'optional An image file for the client, allowed types: jpeg, png, jpg, gif, svg, max size 5MB.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      url: '"https://example.com"'
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
            "success" : 1
            "message": "Client Updated",
            "client": {
              "id": 1,
              "url": "https://example.com",
              "image": "https://cloudinary.com/your-new-image-url.jpg",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success" : 0
            "message": "Record not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success" : 0
            "message": "An error occurred while updating the client",
            "error": "Detailed error message here"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/Delete/Client/{id}'
    metadata:
      groupName: 'Client Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Delete Client

        This endpoint allows you to delete an existing client by ID.

        **Note:** This endpoint requires an `Authorization: Bearer <access_token>` header.

        **Note:** You will get the access_token after Admin Login
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            'success' : 1,
            "message": "Record deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            'success' : 0,
            "message": "Record not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            'success' : 0,
            "message": "An error occurred while deleting the record",
            "error": "Detailed error message here"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/Show-Client
    metadata:
      groupName: 'Client Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Show All Clients

        This endpoint retrieves all existing clients.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "url": "https://example.com",
              "image": "https://cloudinary.com/your-image-url.jpg",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z"
            },
            {
              "id": 2,
              "url": "https://another-example.com",
              "image": "https://cloudinary.com/another-image-url.jpg",
              "created_at": "2024-01-02T00:00:00.000000Z",
              "updated_at": "2024-01-02T00:00:00.000000Z"
            }
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            'success' : 0,
            "message": "No Client found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
