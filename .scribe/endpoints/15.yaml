name: 'Destination Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/addDestination
    metadata:
      groupName: 'Destination Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Add or update a destination.

        This endpoint allows adding a new destination or updating an existing one, depending on whether an ID is provided. 
        If the destination already exists (based on the provided ID), it will be updated with the new details.
        The endpoint accepts destination details such as name, city, state, images, and more.

        **Note:** This endpoint requires an `Authorization: Bearer <access_token>` header.

        **Note:** You will get the access_token after Admin Login
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      id:
        name: id
        description: 'optional The ID of the destination to be updated. If not provided, a new destination is created.'
        required: false
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      id: sit
    bodyParameters:
      name:
        name: name
        description: 'The name of the destination.'
        required: true
        example: '"Paris"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city:
        name: city
        description: 'optional The city of the destination.'
        required: false
        example: '"Paris"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      state:
        name: state
        description: 'optional The state of the destination.'
        required: false
        example: '"Ile-de-France"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      destination_type:
        name: destination_type
        description: 'optional The type of the destination.'
        required: false
        example: '"Tourist"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      thumbnail_image:
        name: thumbnail_image
        description: 'Image for the thumbnail of the destination. File must be of type jpeg, png, jpg, gif, or svg.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      images:
        name: images
        description: 'Array of images for the destination. Each image must be of type jpeg, png, jpg, gif, or svg.'
        required: true
        example:
          - sunt
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      short_description:
        name: short_description
        description: 'A short description of the destination.'
        required: true
        example: '"The city of lights."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'A detailed description of the destination.'
        required: true
        example: '"Paris is known for its art, fashion, and culture."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Paris"'
      city: '"Paris"'
      state: '"Ile-de-France"'
      destination_type: '"Tourist"'
      images:
        - sunt
      short_description: '"The city of lights."'
      description: '"Paris is known for its art, fashion, and culture."'
    fileParameters:
      thumbnail_image: null
    responses:
      -
        status: 200
        content: |-
          {
               'success' : 1
              "message": "Destination Updated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
              'success' : 1
              "message": "Destination Added"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": {
                  "name": ["The name field is required."]
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              'success' : 0
              "error": "Something went wrong",
              "details": "Error message details"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/deleteDestination
    metadata:
      groupName: 'Destination Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Delete a destination by ID.

        This endpoint deletes a destination record based on the provided `id`. 
        If the destination with the given ID does not exist, a 404 error is returned. 
        On successful deletion, a success message is returned.

        **Note:** This endpoint requires an `Authorization: Bearer <access_token>` header.

        **Note:** You will get the access_token after Admin Login
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {access_token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": 1,
              "message": "Destination Removed Successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": 0,
              "message": "No Data Found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": 0,
              "error": "Something went wrong while deleting",
              "details": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/showDestination
    metadata:
      groupName: 'Destination Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show all destinations.'
      description: |-
        This endpoint retrieves all destinations from the database. If no destinations are found, it returns a 404 error.
        If destinations are found, it returns a list of destinations along with their details such as name, city, state,
        images, description, etc.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": 1,
              "data": [
                  {
                      "id": "1",
                      "name": "Paris",
                      "city": "Paris",
                      "state": "Ile-de-France",
                      "destination_type": "Tourist",
                      "thumbnail_image": "https://link-to-thumbnail-image.com",
                      "images": [
                          "https://link-to-image1.com",
                          "https://link-to-image2.com"
                      ],
                      "short_description": "The city of lights.",
                      "description": "Paris is known for its art, fashion, and culture."
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": 0,
              "message": "No Destinations found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/destination
    metadata:
      groupName: 'Destination Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show all destinations.'
      description: |-
        This endpoint retrieves all destinations from the database. If no destinations are found, it returns a 404 error.
        If destinations are found, it returns a list of destinations along with their details such as name, city, state,
        images, description, etc.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": 1,
              "data": [
                  {
                      "id": "1",
                      "name": "Paris",
                      "city": "Paris",
                      "state": "Ile-de-France",
                      "destination_type": "Tourist",
                      "thumbnail_image": "https://link-to-thumbnail-image.com",
                      "images": [
                          "https://link-to-image1.com",
                          "https://link-to-image2.com"
                      ],
                      "short_description": "The city of lights.",
                      "description": "Paris is known for its art, fashion, and culture."
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": 0,
              "message": "No Destinations found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/searchDestination
    metadata:
      groupName: 'Destination Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search destinations based on filters.'
      description: |-
        This endpoint allows users to search destinations based on the `state` and `destination_type` query parameters.
        Both filters are optional. If no matching destinations are found, a 404 error is returned.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": 1,
              "Destination": [
                  {
                      "id": "1",
                      "name": "Paris",
                      "city": "Paris",
                      "state": "Ile-de-France",
                      "destination_type": "Tourist",
                      "thumbnail_image": "https://link-to-thumbnail-image.com",
                      "images": [
                          "https://link-to-image1.com",
                          "https://link-to-image2.com"
                      ],
                      "short_description": "The city of lights.",
                      "description": "Paris is known for its art, fashion, and culture."
                  },
                  {
                      "id": "2",
                      "name": "New York",
                      "city": "New York",
                      "state": "New York",
                      "destination_type": "Urban",
                      "thumbnail_image": "https://link-to-thumbnail-image.com",
                      "images": [
                          "https://link-to-image1.com",
                          "https://link-to-image2.com"
                      ],
                      "short_description": "The city that never sleeps.",
                      "description": "New York is known for its skyline, culture, and food."
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": 0,
              "message": "No destination Found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "success": 0,
              "errors": [
                  "The state field must be a string.",
                  "The destination type field must be a string."
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
               "success": 0,
              "error": "Something went wrong",
              "details": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/destinationType
    metadata:
      groupName: 'Destination Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Retrieve unique destination types.

        This endpoint returns all unique destination types available in the `Destination` records.
        If no destination types are found, a 404 error is returned.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": 1,
              "destination_types": [
                  "Tourist",
                  "Urban",
                  "Beach"
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": 0,
              "message": "No data Found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": 0,
              "error": "Something went wrong",
              "details": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
